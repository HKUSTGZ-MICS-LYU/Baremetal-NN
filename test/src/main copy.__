#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#include "nn.h"
// #include "nn_int32.h"


#define DIM    16

int main() {
  
  Tensor A = NN_tensor(2, (size_t[]){DIM, DIM}, DTYPE_I8, (uint8_t[DIM*DIM]){});
  Tensor B = NN_tensor(2, (size_t[]){DIM, DIM}, DTYPE_I8, (uint8_t[DIM*DIM]){});
  Tensor D = NN_tensor(2, (size_t[]){DIM, DIM}, DTYPE_I8, (uint8_t[DIM*DIM]){});

  Tensor C = NN_tensor(2, (size_t[]){DIM, DIM}, DTYPE_I32, (uint32_t[DIM*DIM]){});
  
  
  for (size_t i=0; i<DIM; ++i) {
    for (size_t j=0; j<DIM; ++j) {
      ((int8_t *)A.data)[i*DIM+j] = i;
      ((int8_t *)B.data)[i*DIM+j] = i;
      ((int8_t *)D.data)[i*DIM+j] = i;
    }
  }

  NN_linear_I8_I8_I8_I32(&C, &A, &B, &D);
  
  NN_clip(&C, INT8_MIN, INT8_MAX);
  NN_asType(&C, DTYPE_I8);


  printf("C:\n");
  NN_printf(&C);

  


  // forward(&model, x);

  printf("done\n");

  return 0;
}
